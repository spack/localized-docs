# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-17 09:38+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/spack.modules.rst:2
msgid "spack.modules package"
msgstr ""

#: ../spack/lib/spack/docs/spack.modules.rst:5
msgid "Submodules"
msgstr ""

#: ../spack/lib/spack/docs/spack.modules.rst:8
msgid "spack.modules.common module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:1
msgid "Here we consolidate the logic for creating an abstract description of the information that module systems need."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:4
msgid "This information maps **a single spec** to:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:6
msgid "a unique module filename"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:7
msgid "the module file content"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:9
msgid "and is divided among four classes:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:11
msgid "a configuration class that provides a convenient interface to query details about the configuration for the spec under consideration."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:14
msgid "a layout class that provides the information associated with module file names and directories"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:17
msgid "a context class that provides the dictionary used by the template engine to generate the module file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:20
msgid "a writer that collects and uses the information above to either write or remove the module file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common:23
msgid "Each of the four classes needs to be sub-classed when implementing a new module type."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseFileLayout:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseModuleFileWriter:1
msgid "Bases: :class:`object`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration:1
msgid "Manipulates the information needed to generate a module file to make querying easier. It needs to be sub-classed for specific module types."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.blacklisted:1
msgid "Returns True if the module has been blacklisted, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.env:1
msgid "List of environment modifications that should be done in the module."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.environment_blacklist:1
msgid "List of variables that should be left unmodified."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.hash:1
msgid "Hash tag for the module or None"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.literals_to_load:1
msgid "List of literal modules to be loaded."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.naming_scheme:1
msgid "Naming scheme suitable for non-hierarchical layouts"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.specs_to_load:1
msgid "List of specs that should be loaded in the module file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.specs_to_prereq:1
msgid "List of specs that should be prerequisite of the module file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.suffixes:1
msgid "List of suffixes that should be appended to the module file name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.template:1
msgid "Returns the name of the template to use for the module file or None if not specified in the configuration."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseConfiguration.verbose:1
msgid "Returns True if the module file needs to be verbose, False otherwise"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseContext:1
msgid "Bases: :class:`spack.tengine.Context`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseContext:1
msgid "Provides the base context needed for template rendering."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseContext:3
msgid "This class needs to be sub-classed for specific module types. The following attributes need to be implemented:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseContext:6
msgid "fields"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseContext.autoload:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclContext.prerequisites:1
msgid "List of modules that needs to be loaded automatically."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseContext.environment_modifications:1
msgid "List of environment modifications to be processed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseContext.verbose:1
msgid "Verbosity level."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseFileLayout:1
msgid "Provides information on the layout of module files. Needs to be sub-classed for specific module types."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseFileLayout.dirname:1
msgid "Root folder for module files of this type."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseFileLayout.extension:1
msgid "This needs to be redefined"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseFileLayout.filename:1
msgid "Name of the module file for the current spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseFileLayout.spec:1
msgid "Spec under consideration"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseFileLayout.use_name:1
msgid "Returns the 'use' name of the module i.e. the name you have to type to console to use it. This implementation fits the needs of most non-hierarchical layouts."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseModuleFileWriter.remove:1
msgid "Deletes the module file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseModuleFileWriter.write:1
msgid "Writes the module file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseModuleFileWriter.write:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.dependencies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.merge_config_rules:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.root_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.update_dictionary_extending_lists:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.token_to_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.guess_core_compilers:0
msgid "Parameters"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.BaseModuleFileWriter.write:3
msgid "if True it is fine to overwrite an already existing file. If False the operation is skipped an we print a warning to the user."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.DefaultTemplateNotDefined:1
msgid "Bases: :class:`AttributeError`, :class:`spack.modules.common.ModulesError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.DefaultTemplateNotDefined:1
msgid "Raised if the attribute 'default_template' has not been specified in the derived classes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.ModuleIndexEntry:1
msgid "Bases: :class:`tuple`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.ModuleIndexEntry.path:1
msgid "Alias for field number 0"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.ModuleIndexEntry.use_name:1
msgid "Alias for field number 1"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.ModulesError:1
msgid "Bases: :class:`spack.error.SpackError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.ModulesError:1
msgid "Base error for modules."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.ModulesTemplateNotFoundError:1
msgid "Bases: :class:`spack.modules.common.ModulesError`, :class:`RuntimeError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.ModulesTemplateNotFoundError:1
msgid "Raised if the template for a module file was not found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.configuration:1
msgid "config section for this file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.dependencies:1
msgid "Returns the list of dependent specs for a given spec, according to the request passed as parameter."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.dependencies:4
msgid "spec to be analyzed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.dependencies:5
msgid "either 'none', 'direct' or 'all'"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.dependencies:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.merge_config_rules:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.root_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.token_to_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.guess_core_compilers:0
msgid "Returns"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.dependencies:7
msgid "list of dependencies  The return list will be empty if request is 'none', will contain the direct dependencies if request is 'direct', or the entire DAG if request is 'all'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.dependencies:7
msgid "list of dependencies"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.dependencies:9
msgid "The return list will be empty if request is 'none', will contain the direct dependencies if request is 'direct', or the entire DAG if request is 'all'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.merge_config_rules:1
msgid "Parses the module specific part of a configuration and returns a dictionary containing the actions to be performed on the spec passed as an argument."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.merge_config_rules:5
msgid "module specific configuration (e.g. entries under the top-level 'tcl' key)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.merge_config_rules:7
msgid "spec for which we need to generate a module file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.merge_config_rules:9
msgid "actions to be taken on the spec passed as an argument"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.merge_config_rules:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.token_to_path:0
msgid "Return type"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.prefix_inspections:1
msgid "Inspections that needs to be done on spec prefixes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.root_path:1
msgid "Returns the root folder for module file installation."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.root_path:3
msgid "name of the module system t be used (e.g. 'tcl')"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.root_path:5
msgid "root folder for module file installation"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.roots:1
msgid "Root folders where the various module files should be written"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.update_dictionary_extending_lists:1
msgid "Updates a dictionary, but extends lists instead of overriding them."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.update_dictionary_extending_lists:3
msgid "dictionary to be updated"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/common.py:docstring of spack.modules.common.update_dictionary_extending_lists:4
msgid "update to be applied"
msgstr ""

#: ../spack/lib/spack/docs/spack.modules.rst:16
msgid "spack.modules.dotkit module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit:1
msgid "This module implements the classes necessary to generate dotkit modules."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.DotkitConfiguration:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclConfiguration:1
msgid "Bases: :class:`spack.modules.common.BaseConfiguration`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.DotkitConfiguration:1
msgid "Configuration class for dotkit module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.DotkitContext:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclContext:1
msgid "Bases: :class:`spack.modules.common.BaseContext`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.DotkitContext:1
msgid "Context class for dotkit module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.DotkitFileLayout:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclFileLayout:1
msgid "Bases: :class:`spack.modules.common.BaseFileLayout`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.DotkitFileLayout:1
msgid "File layout for dotkit module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.DotkitFileLayout.extension:1
msgid "file extension of dotkit module files"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.DotkitModulefileWriter:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodModulefileWriter:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclModulefileWriter:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.DotkitModulefileWriter:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.TclModulefileWriter:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.LmodModulefileWriter:1
msgid "Bases: :class:`spack.modules.common.BaseModuleFileWriter`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.DotkitModulefileWriter:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.DotkitModulefileWriter:1
msgid "Writer class for dotkit module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.configuration:1
msgid "Dotkit specific part of the configuration"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.configuration_registry:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.configuration_registry:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.configuration_registry:1
msgid "configuration}"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.configuration_registry:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.configuration_registry:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.configuration_registry:0
msgid "type"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.configuration_registry:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.configuration_registry:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.configuration_registry:3
msgid "Caches the configuration {spec_hash"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.make_configuration:1
msgid "Returns the dotkit configuration for spec"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.make_context:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.make_context:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.make_context:1
msgid "Returns the context information for spec"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/dotkit.py:docstring of spack.modules.dotkit.make_layout:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.make_layout:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.make_layout:1
msgid "Returns the layout information for spec"
msgstr ""

#: ../spack/lib/spack/docs/spack.modules.rst:24
msgid "spack.modules.lmod module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.CoreCompilersNotFoundError:1
msgid "Bases: :class:`spack.error.SpackError`, :class:`KeyError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.CoreCompilersNotFoundError:1
msgid "Error raised if the key 'core_compilers' has not been specified in the configuration file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration:1
msgid "Configuration class for lmod module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration.available:1
msgid "Returns a dictionary of the services that are currently available."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration.core_compilers:1
msgid "Returns the list of \"Core\" compilers"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration.core_compilers:0
msgid "Raises"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration.core_compilers:3
msgid "if the key was not     specified in the configuration file or the sequence     is empty"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration.hierarchy_tokens:1
msgid "Returns the list of tokens that are part of the modulefile hierarchy. 'compiler' is always present."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration.missing:1
msgid "Returns the list of tokens that are not available."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration.provides:1
msgid "Returns a dictionary mapping all the services provided by this spec to the spec itself."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodConfiguration.requires:1
msgid "Returns a dictionary mapping all the requirements of this spec to the actual provider. 'compiler' is always present among the requirements."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext:1
msgid "Context class for lmod module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext.conditionally_unlocked_paths:1
msgid "Returns the list of paths that are unlocked conditionally. Each item in the list is a tuple with the structure (condition, path)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext.has_conditional_modifications:1
msgid "True if this module modifies MODULEPATH conditionally to the presence of other services in the environment, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext.has_modulepath_modifications:1
msgid "True if this module modifies MODULEPATH, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext.missing:1
msgid "Returns a list of missing services."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext.name_part:1
msgid "Name of this provider."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext.provides:1
msgid "Returns the dictionary of provided services."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext.unlocked_paths:1
msgid "Returns the list of paths that are unlocked unconditionally."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodContext.version_part:1
msgid "Version of this provider."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout:1
msgid "File layout for lmod module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.arch_dirname:1
msgid "Returns the root folder for THIS architecture"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.available_path_parts:1
msgid "List of path parts that are currently available. Needed to construct the file name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.extension:1
msgid "file extension of lua module files"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.filename:1
msgid "Returns the filename for the current module file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.token_to_path:1
msgid "Transforms a hierarchy token into the corresponding path part."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.token_to_path:3
msgid "name of the service in the hierarchy"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.token_to_path:5
msgid "actual provider of the service"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.token_to_path:7
msgid "part of the path associated with the service"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.unlocked_paths:1
msgid "Returns a dictionary mapping conditions to a list of unlocked paths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.unlocked_paths:4
msgid "The paths that are unconditionally unlocked are under the key 'None'. The other keys represent the list of services you need loaded to unlock the corresponding paths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodFileLayout.use_name:1
msgid "Returns the 'use' name of the module i.e. the name you have to type to console to use it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.LmodModulefileWriter:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.LmodModulefileWriter:1
msgid "Writer class for lmod module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.NonVirtualInHierarchyError:1
msgid "Bases: :class:`spack.error.SpackError`, :class:`TypeError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.NonVirtualInHierarchyError:1
msgid "Error raised if non-virtual specs are used as hierarchy tokens in the lmod section of 'modules.yaml'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.configuration:1
msgid "lmod specific part of the configuration"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.guess_core_compilers:1
msgid "Guesses the list of core compilers installed in the system."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.guess_core_compilers:3
msgid "if True writes the core compilers to the modules.yaml configuration file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.guess_core_compilers:7
msgid "List of core compilers, if found, or None"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/lmod.py:docstring of spack.modules.lmod.make_configuration:1
msgid "Returns the lmod configuration for spec"
msgstr ""

#: ../spack/lib/spack/docs/spack.modules.rst:32
msgid "spack.modules.tcl module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl:1
msgid "This module implements the classes necessary to generate TCL non-hierarchical modules."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclConfiguration:1
msgid "Configuration class for tcl module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclConfiguration.conflicts:1
msgid "Conflicts for this module file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclContext:1
msgid "Context class for tcl module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclContext.conflicts:1
msgid "List of conflicts for the tcl module file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclFileLayout:1
msgid "File layout for tcl module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.TclModulefileWriter:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.TclModulefileWriter:1
msgid "Writer class for tcl module files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.configuration:1
msgid "TCL specific part of the configuration"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/tcl.py:docstring of spack.modules.tcl.make_configuration:1
msgid "Returns the tcl configuration for spec"
msgstr ""

#: ../spack/lib/spack/docs/spack.modules.rst:41
msgid "Module contents"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/modules/__init__.py:docstring of spack.modules:1
msgid "This package contains code for creating environment modules, which can include dotkits, TCL non-hierarchical modules, LUA hierarchical modules, and others."
msgstr ""

