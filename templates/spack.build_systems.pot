# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-17 09:38+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/spack.build_systems.rst:2
msgid "spack.build\\_systems package"
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:5
msgid "Submodules"
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:8
msgid "spack.build\\_systems.aspell\\_dict module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/aspell_dict.py:docstring of spack.build_systems.aspell_dict.AspellDictPackage:1
msgid "Bases: :class:`spack.build_systems.autotools.AutotoolsPackage`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/aspell_dict.py:docstring of spack.build_systems.aspell_dict.AspellDictPackage:1
msgid "Specialized class for building aspell dictionairies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/aspell_dict.py:docstring of spack.build_systems.aspell_dict.AspellDictPackage.configure:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.configure:1
msgid "Runs configure with the arguments specified in :py:meth:`~.AutotoolsPackage.configure_args` and an appropriately set prefix."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/aspell_dict.py:docstring of spack.build_systems.aspell_dict.AspellDictPackage.view_destination:1
msgid "The target root directory: each file is added relative to this directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/aspell_dict.py:docstring of spack.build_systems.aspell_dict.AspellDictPackage.view_source:1
msgid "The source root directory that will be added to the view: files are added such that their path relative to the view destination matches their path relative to the view source."
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:16
msgid "spack.build\\_systems.autotools module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cuda.py:docstring of spack.build_systems.cuda.CudaPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/octave.py:docstring of spack.build_systems.octave.OctavePackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage:1
msgid "Bases: :class:`spack.package.PackageBase`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:1
msgid "Specialized class for packages built using GNU Autotools."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:3
msgid "This class provides four phases that can be overridden:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:5
msgid ":py:meth:`~.AutotoolsPackage.autoreconf`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:6
msgid ":py:meth:`~.AutotoolsPackage.configure`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:7
msgid ":py:meth:`~.AutotoolsPackage.build`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:8
msgid ":py:meth:`~.AutotoolsPackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:10
msgid "They all have sensible defaults and for many packages the only thing necessary will be to override the helper method :py:meth:`~.AutotoolsPackage.configure_args`. For a finer tuning you may also override:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:16
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:17
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:15
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:17
msgid "**Method**"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:16
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:17
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:15
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:17
msgid "**Purpose**"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:18
msgid ":py:attr:`~.AutotoolsPackage.build_targets`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:18
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:17
msgid "Specify ``make`` targets for the build phase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:22
msgid ":py:attr:`~.AutotoolsPackage.install_targets`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:22
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:21
msgid "Specify ``make`` targets for the install phase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:26
msgid ":py:meth:`~.AutotoolsPackage.check`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage:26
msgid "Run  build time tests if required"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.archive_files:1
msgid "Files to archive for packages based on autotools"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.autoreconf:1
msgid "Not needed usually, configure should be already there"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.autoreconf_extra_args:1
msgid "Options to be passed to autoreconf when using the default implementation"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.build:1
msgid "Makes the build targets specified by :py:attr:``~.AutotoolsPackage.build_targets``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.build_directory:1
msgid "Override to provide another place to build the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.build_system_class:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.build_system_class:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.build_system_class:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.build_system_class:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.build_system_class:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.build_system_class:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage.build_system_class:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage.build_system_class:1
msgid "This attribute is used in UI queries that need to know the build system base class"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.build_targets:1
msgid "Targets for ``make`` during the :py:meth:`~.AutotoolsPackage.build` phase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.build_time_test_callbacks:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.build_time_test_callbacks:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.build_time_test_callbacks:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_time_test_callbacks:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage.build_time_test_callbacks:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage.build_time_test_callbacks:1
msgid "Callback names for build-time test"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.check:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.check:1
msgid "Searches the Makefile for targets ``test`` and ``check`` and runs them if found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.configure_args:1
msgid "Produces a list containing all the arguments that must be passed to configure, except ``--prefix`` which will be pre-pended to the list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.configure_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.configure_directory:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.enable_or_disable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.build_directory:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.cmake_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.root_cmakelists_dir:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.std_cmake_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.build_directory:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.build_directory:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.meson_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.root_mesonlists_dir:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.std_meson_args:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.configure_args:0
msgid "Returns"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.configure_args:4
msgid "list of arguments for configure"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.configure_directory:1
msgid "Returns the directory where 'configure' resides."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.configure_directory:3
msgid "directory where to find configure"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.enable_or_disable:1
msgid "Same as :py:meth:`~.AutotoolsPackage.with_or_without` but substitute ``with`` with ``enable`` and ``without`` with ``disable``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.enable_or_disable:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.mpi_setup_dependent_environment:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_suite_dir:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_environment:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:0
msgid "Parameters"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.enable_or_disable:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:14
msgid "name of a valid multi-valued variant"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.enable_or_disable:6
msgid "if present accepts a single value and returns the parameter to be used leading to an entry of the type ``--enable-{name}={parameter}``  The special value 'prefix' can also be assigned and will return ``spec[name].prefix`` as activation parameter."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.enable_or_disable:6
msgid "if present accepts a single value and returns the parameter to be used leading to an entry of the type ``--enable-{name}={parameter}``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.enable_or_disable:10
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:20
msgid "The special value 'prefix' can also be assigned and will return ``spec[name].prefix`` as activation parameter."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.enable_or_disable:14
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:24
msgid "list of arguments to configure"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.flags_to_build_system_args:1
msgid "Produces a list of all command line arguments to pass specified compiler flags to configure."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.force_autoreconf:1
msgid "Set to true to force the autoreconf step even if configure is present"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.install:1
msgid "Makes the install targets specified by :py:attr:``~.AutotoolsPackage.install_targets``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.install_targets:1
msgid "Targets for ``make`` during the :py:meth:`~.AutotoolsPackage.install` phase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.install_time_test_callbacks:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.install_time_test_callbacks:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_time_test_callbacks:1
msgid "Callback names for install-time test"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.installcheck:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.installcheck:1
msgid "Searches the Makefile for an ``installcheck`` target and runs it if found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.patch_config_guess:1
msgid "Whether or not to update ``config.guess`` on old architectures"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.phases:1
msgid "Phases of a GNU Autotools package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.set_configure_or_die:1
msgid "Checks the presence of a ``configure`` file after the autoreconf phase. If it is found sets a module attribute appropriately, otherwise raises an error."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.set_configure_or_die:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.configure:0
msgid "Raises"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.set_configure_or_die:5
msgid "if a configure script is not found in :py:meth:`~AutotoolsPackage.configure_directory`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:1
msgid "Inspects a variant and returns the arguments that activate or deactivate the selected feature(s) for the configure options."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:4
msgid "This function works on all type of variants. For bool-valued variants it will return by default ``--with-{name}`` or ``--without-{name}``. For other kinds of variants it will cycle over the allowed values and return either ``--with-{value}`` or ``--without-{value}``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:9
msgid "If activation_value is given, then for each possible value of the variant, the option ``--with-{value}=activation_value(value)`` or ``--without-{value}`` will be added depending on whether or not ``variant=value`` is in the spec."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:16
msgid "callable that accepts a single value and returns the parameter to be used leading to an entry of the type ``--with-{name}={parameter}``.  The special value 'prefix' can also be assigned and will return ``spec[name].prefix`` as activation parameter."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/autotools.py:docstring of spack.build_systems.autotools.AutotoolsPackage.with_or_without:16
msgid "callable that accepts a single value and returns the parameter to be used leading to an entry of the type ``--with-{name}={parameter}``."
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:24
msgid "spack.build\\_systems.cmake module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:1
msgid "Specialized class for packages built using CMake"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:3
msgid "For more information on the CMake build system, see: https://cmake.org/cmake/help/latest/"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage:6
msgid "This class provides three phases that can be overridden:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:8
msgid ":py:meth:`~.CMakePackage.cmake`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:9
msgid ":py:meth:`~.CMakePackage.build`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:10
msgid ":py:meth:`~.CMakePackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:12
msgid "They all have sensible defaults and for many packages the only thing necessary will be to override :py:meth:`~.CMakePackage.cmake_args`. For a finer tuning you may also override:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:19
msgid ":py:meth:`~.CMakePackage.root_cmakelists_dir`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:19
msgid "Location of the root CMakeLists.txt"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:22
msgid ":py:meth:`~.CMakePackage.build_directory`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:22
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:22
msgid "Directory where to build the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage:27
msgid "The generator used by CMake can be specified by providing the generator attribute. Per https://cmake.org/cmake/help/git-master/manual/cmake-generators.7.html, the format is: [<secondary-generator> - ]<primary_generator>. The full list of primary and secondary generators supported by CMake may be found in the documentation for the version of CMake used; however, at this time Spack supports only the primary generators \"Unix Makefiles\" and \"Ninja.\" Spack's CMake support is agnostic with respect to primary generators. Spack will generate a runtime error if the generator string does not follow the prescribed format, or if the primary generator is not supported."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.archive_files:1
msgid "Files to archive for packages based on CMake"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.build:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.build:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage.build:1
msgid "Make the build targets"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.build_directory:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.build_directory:1
msgid "Returns the directory to use when building the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.build_directory:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.build_directory:3
msgid "directory where to build the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.check:1
msgid "Searches the CMake-generated Makefile for the target ``test`` and runs it if found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.cmake:1
msgid "Runs ``cmake`` in the build directory"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.cmake_args:1
msgid "Produces a list containing all the arguments that must be passed to cmake, except:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.cmake_args:4
msgid "CMAKE_INSTALL_PREFIX"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.cmake_args:5
msgid "CMAKE_BUILD_TYPE"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.cmake_args:7
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.meson_args:9
msgid "which will be set automatically."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.cmake_args:9
msgid "list of arguments for cmake"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.flags_to_build_system_args:1
msgid "Produces a list of all command line arguments to pass the specified compiler flags to cmake. Note CMAKE does not have a cppflags option, so cppflags will be added to cflags, cxxflags, and fflags to mimic the behavior in other tools."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.generator:1
msgid "The build system generator to use."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.generator:3
msgid "See ``cmake --help`` for a list of valid generators. Currently, \"Unix Makefiles\" and \"Ninja\" are the only generators that Spack supports. Defaults to \"Unix Makefiles\"."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.generator:7
msgid "See https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html for more information."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.install:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.install:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage.install:1
msgid "Make the install targets"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.phases:1
msgid "Phases of a CMake package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.root_cmakelists_dir:1
msgid "The relative path to the directory containing CMakeLists.txt"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.root_cmakelists_dir:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.root_mesonlists_dir:3
msgid "This path is relative to the root of the extracted tarball, not to the ``build_directory``. Defaults to the current directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.root_cmakelists_dir:6
msgid "directory containing CMakeLists.txt"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.std_cmake_args:1
msgid "Standard cmake arguments provided as a property for convenience of package writers"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cmake.py:docstring of spack.build_systems.cmake.CMakePackage.std_cmake_args:4
msgid "standard cmake arguments"
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:32
msgid "spack.build\\_systems.cuda module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/cuda.py:docstring of spack.build_systems.cuda.CudaPackage:1
msgid "Auxiliary class which contains CUDA variant, dependencies and conflicts and is meant to unify and facilitate its usage."
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:40
msgid "spack.build\\_systems.intel module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage:1
msgid "Specialized class for licensed Intel software."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage:3
msgid "This class provides two phases that can be overridden:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage:5
msgid ":py:meth:`~.IntelPackage.configure`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage:6
msgid ":py:meth:`~.IntelPackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage:8
msgid "They both have sensible defaults and for many packages the only thing necessary will be to override setup_environment to set the appropriate environment variables."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.component_lib_dir:1
msgid "Provide directory suitable for find_libraries() and SPACK_COMPILER_EXTRA_RPATHS."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.configure:1
msgid "Generates the silent.cfg file to pass to installer.sh."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.configure:3
msgid "See https://software.intel.com/en-us/articles/configuration-file-format"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.file_to_source:1
msgid "Full path of file to source for initializing an Intel package. A client package could override as follows: `    @property` `    def file_to_source(self):` `        return self.normalize_path(\"apsvars.sh\", \"vtune_amplifier\")`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.global_license_file:1
msgid "Returns the path where a Spack-global license file should be stored."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.global_license_file:3
msgid "All Intel software shares the same license, so we store it in a common 'intel' directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.install:1
msgid "Runs Intel's install.sh installation script. Afterwards, save the installer config and logs to <prefix>/.spack"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.intel64_int_suffix:1
msgid "Provide the suffix for Intel library names to match a client application's desired int size, conveyed by the active spec variant. The possible suffixes and their meanings are:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.intel64_int_suffix:5
msgid "``ilp64``  all of int, long, and pointer are 64 bit, `` lp64``  only long and pointer are 64 bit; int will be 32bit."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.license_comment:1
msgid "Comment symbol used in the license.lic file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.license_files:1
msgid "Built-in mutable sequence."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.license_files:3
msgid "If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.license_required:1
msgid "bool(x) -> bool"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.license_required:3
msgid "Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.license_url:1
msgid "URL providing information on how to acquire a license key"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.license_vars:1
msgid "Environment variables that Intel searches for a license file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.mpi_compiler_wrappers:1
msgid "Return paths to compiler wrappers as a dict of env-like names"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.mpi_setup_dependent_environment:1
msgid "Unified back-end for setup_dependent_environment() of Intel packages that provide 'mpi'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.mpi_setup_dependent_environment:4
msgid "same as in setup_dependent_environment()."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.mpi_setup_dependent_environment:6
msgid "Conveys spack_cc, spack_cxx, etc., from the scope of dependent packages; constructed in caller."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_path:1
msgid "Returns the absolute or relative path to a component or file under a component suite directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_path:4
msgid "Intel's product names, scope, and directory layout changed over the years.  This function provides a unified interface to their directory names."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_path:8
msgid "a component name like 'mkl', or 'mpi', or a deeper relative path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_path:11
msgid "_Unversioned_ name of the expected parent directory of component_path.  When absent or `None`, an appropriate default will be used.  A present but empty string `\"\"` requests that `component_path` refer to `self.prefix` directly.  Typical values: `compilers_and_libraries`, `composer_xe`, `parallel_studio_xe`.  Also supported: `advisor`, `inspector`, `vtune`. The actual directory name for these suites varies by release year. The name will be corrected as needed for use in the return value."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_path:11
msgid "_Unversioned_ name of the expected parent directory of component_path.  When absent or `None`, an appropriate default will be used.  A present but empty string `\"\"` requests that `component_path` refer to `self.prefix` directly."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_path:17
msgid "Typical values: `compilers_and_libraries`, `composer_xe`, `parallel_studio_xe`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_path:20
msgid "Also supported: `advisor`, `inspector`, `vtune`. The actual directory name for these suites varies by release year. The name will be corrected as needed for use in the return value."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_path:24
msgid "When True, return path relative to self.prefix, otherwise, return an absolute path (the default)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_suite_dir:1
msgid "Returns the version-specific and absolute path to the directory of an Intel product or a suite of product components."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_suite_dir:4
msgid "Name of the product directory, without numeric version.  - Examples::      composer_xe, parallel_studio_xe, compilers_and_libraries  The following will work as well, even though they are not directly targets for Spack installation::      advisor_xe, inspector_xe, vtune_amplifier_xe,     performance_snapshots (new name for vtune as of 2018)  These are single-component products without subordinate components and are normally made available to users by a toplevel psxevars.sh or equivalent file to source (and thus by the modulefiles that Spack produces)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_suite_dir:4
msgid "Name of the product directory, without numeric version."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_suite_dir:6
msgid "Examples::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_suite_dir:10
msgid "The following will work as well, even though they are not directly targets for Spack installation::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_suite_dir:16
msgid "These are single-component products without subordinate components and are normally made available to users by a toplevel psxevars.sh or equivalent file to source (and thus by the modulefiles that Spack produces)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.normalize_suite_dir:21
msgid "Suffix glob patterns (most specific first) expected to qualify suite_dir_name to its fully version-specific install directory (as opposed to a compatibility directory or symlink)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.openmp_libs:1
msgid "Supply LibraryList for linking OpenMP"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.phases:1
msgid "Phases of an Intel package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_environment:1
msgid "Set up the environment of packages that depend on this one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_environment:3
msgid "This is similar to ``setup_environment``, but it is used to modify the compile and runtime environments of packages that *depend* on this one. This gives packages like Python and others that follow the extension model a way to implement common environment or compile-time settings for dependencies."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_environment:9
msgid "This is useful if there are some common steps to installing all extensions for a certain package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_environment:12
msgid "Example:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_environment:14
msgid "Installing python modules generally requires ``PYTHONPATH`` to point to the ``lib/pythonX.Y/site-packages`` directory in the module's install prefix. This method could be used to set that variable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_environment:18
msgid "List of environment modifications to be applied when the dependent package is built within Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_environment:22
msgid "List of environment modifications to be applied when the dependent package is run outside of Spack. These are added to the resulting module file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_environment:27
msgid "The spec of the dependent package about to be built. This allows the extendee (self) to query the dependent's state. Note that *this* package's spec is available as ``self.spec``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:1
msgid "Set up Python module-scope variables for dependent packages."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:3
msgid "Called before the install() method of dependents."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:5
msgid "Default implementation does nothing, but this can be overridden by an extendable package to set up the module of its extensions. This is useful if there are some common steps to installing all extensions for a certain package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:10
msgid "Examples:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:12
msgid "Extensions often need to invoke the ``python`` interpreter from the Python installation being extended. This routine can put a ``python()`` Executable object in the module scope for the extension package to simplify extension installs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:17
msgid "MPI compilers could set some variables in the dependent's scope that point to ``mpicc``, ``mpicxx``, etc., allowing them to be called by common name regardless of which MPI is used."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:21
msgid "BLAS/LAPACK implementations can set some variables indicating the path to their libraries, since these paths differ by BLAS/LAPACK implementation."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:25
msgid "The Python ``module`` object of the dependent package. Packages can use this to set module-scope variables for the dependent to use."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_dependent_package:29
msgid "The spec of the dependent package about to be built. This allows the extendee (self) to query the dependent's state.  Note that *this* package's spec is available as ``self.spec``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_environment:1
msgid "Adds environment variables to the generated module file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.setup_environment:3
msgid "These environment variables come from running:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.tbb_libs:1
msgid "Supply LibraryList for linking TBB"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.IntelPackage.version_yearlike:1
msgid "Return the version in a unified style, suitable for Version class conditionals."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.debug_print:1
msgid "Prints a message (usu. a variable) and the callers' names for a couple of stack frames."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/intel.py:docstring of spack.build_systems.intel.raise_lib_error:1
msgid "Bails out with an error message. Shows args after the first as one per line, tab-indented, useful for long paths to line up and stand out."
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:48
msgid "spack.build\\_systems.makefile module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:1
msgid "Specialized class for packages that are built using editable Makefiles"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:5
msgid ":py:meth:`~.MakefilePackage.edit`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:6
msgid ":py:meth:`~.MakefilePackage.build`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:7
msgid ":py:meth:`~.MakefilePackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:9
msgid "It is usually necessary to override the :py:meth:`~.MakefilePackage.edit` phase, while :py:meth:`~.MakefilePackage.build` and :py:meth:`~.MakefilePackage.install` have sensible defaults. For a finer tuning you may override:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:17
msgid ":py:attr:`~.MakefilePackage.build_targets`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:21
msgid ":py:attr:`~.MakefilePackage.install_targets`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:25
msgid ":py:meth:`~.MakefilePackage.build_directory`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage:25
msgid "Directory where the Makefile is located"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.build:1
msgid "Calls make, passing :py:attr:`~.MakefilePackage.build_targets` as targets."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.build_directory:1
msgid "Returns the directory containing the main Makefile"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.build_directory:3
msgid "build directory"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.build_targets:1
msgid "Targets for ``make`` during the :py:meth:`~.MakefilePackage.build` phase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.edit:1
msgid "Edits the Makefile before calling make. This phase cannot be defaulted."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.install:1
msgid "Calls make, passing :py:attr:`~.MakefilePackage.install_targets` as targets."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.install_targets:1
msgid "Targets for ``make`` during the :py:meth:`~.MakefilePackage.install` phase"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/makefile.py:docstring of spack.build_systems.makefile.MakefilePackage.phases:1
msgid "Phases of a package that is built with an hand-written Makefile"
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:56
msgid "spack.build\\_systems.meson module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:1
msgid "Specialized class for packages built using Meson"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:3
msgid "For more information on the Meson build system, see: https://mesonbuild.com/"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:8
msgid ":py:meth:`~.MesonPackage.meson`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:9
msgid ":py:meth:`~.MesonPackage.build`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:10
msgid ":py:meth:`~.MesonPackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:12
msgid "They all have sensible defaults and for many packages the only thing necessary will be to override :py:meth:`~.MesonPackage.meson_args`. For a finer tuning you may also override:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:19
msgid ":py:meth:`~.MesonPackage.root_mesonlists_dir`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:19
msgid "Location of the root MesonLists.txt"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage:22
msgid ":py:meth:`~.MesonPackage.build_directory`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.archive_files:1
msgid "Files to archive for packages based on Meson"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.check:1
msgid "Searches the Meson-generated file for the target ``test`` and runs it if found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.flags_to_build_system_args:1
msgid "Produces a list of all command line arguments to pass the specified compiler flags to meson."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.meson:1
msgid "Runs ``meson`` in the build directory"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.meson_args:1
msgid "Produces a list containing all the arguments that must be passed to meson, except:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.meson_args:4
msgid "``--prefix``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.meson_args:5
msgid "``--libdir``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.meson_args:6
msgid "``--buildtype``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.meson_args:7
msgid "``--strip``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.meson_args:11
msgid "list of arguments for meson"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.phases:1
msgid "Phases of a Meson package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.root_mesonlists_dir:1
msgid "The relative path to the directory containing meson.build"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.root_mesonlists_dir:6
msgid "directory containing meson.build"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.std_meson_args:1
msgid "Standard meson arguments provided as a property for convenience of package writers"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/meson.py:docstring of spack.build_systems.meson.MesonPackage.std_meson_args:4
msgid "standard meson arguments"
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:64
msgid "spack.build\\_systems.octave module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/octave.py:docstring of spack.build_systems.octave.OctavePackage:1
msgid "Specialized class for Octave packages. See https://www.gnu.org/software/octave/doc/v4.2.0/Installing-and-Removing-Packages.html for more information."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/octave.py:docstring of spack.build_systems.octave.OctavePackage:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage:4
msgid "This class provides the following phases that can be overridden:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/octave.py:docstring of spack.build_systems.octave.OctavePackage:7
msgid ":py:meth:`~.OctavePackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/octave.py:docstring of spack.build_systems.octave.OctavePackage.install:1
msgid "Install the package from the archive file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/octave.py:docstring of spack.build_systems.octave.OctavePackage.setup_environment:1
msgid "Set up the compile and runtime environments for a package."
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:72
msgid "spack.build\\_systems.perl module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:1
msgid "Specialized class for packages that are built using Perl."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:3
msgid "This class provides four phases that can be overridden if required:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:5
msgid ":py:meth:`~.PerlPackage.configure`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:6
msgid ":py:meth:`~.PerlPackage.build`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:7
msgid ":py:meth:`~.PerlPackage.check`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:8
msgid ":py:meth:`~.PerlPackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:12
msgid "The default methods use, in order of preference:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:11
msgid "Makefile.PL,"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:12
msgid "Build.PL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage:14
msgid "Some packages may need to override :py:meth:`~.PerlPackage.configure_args`, which produces a list of arguments for :py:meth:`~.PerlPackage.configure`. Arguments should not include the installation base directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.build:1
msgid "Builds a Perl package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.check:1
msgid "Runs built-in tests of a Perl package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.configure:1
msgid "Runs Makefile.PL or Build.PL with arguments consisting of an appropriate installation base directory followed by the list returned by :py:meth:`~.PerlPackage.configure_args`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.configure:5
msgid "if neither Makefile.PL or Build.PL exist"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.configure_args:1
msgid "Produces a list containing the arguments that must be passed to :py:meth:`~.PerlPackage.configure`. Arguments should not include the installation base directory, which is prepended automatically."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.configure_args:5
msgid "list of arguments for Makefile.PL or Build.PL"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.install:1
msgid "Installs a Perl package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/perl.py:docstring of spack.build_systems.perl.PerlPackage.phases:1
msgid "Phases of a Perl package"
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:80
msgid "spack.build\\_systems.python module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:1
msgid "Specialized class for packages that are built using Python setup.py files"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:6
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage:7
msgid "build"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:7
msgid "build_py"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:8
msgid "build_ext"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:9
msgid "build_clib"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:10
msgid "build_scripts"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:11
msgid "clean"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:12
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage:8
msgid "install"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:13
msgid "install_lib"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:14
msgid "install_headers"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:15
msgid "install_scripts"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:16
msgid "install_data"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:17
msgid "sdist"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:18
msgid "register"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:19
msgid "bdist"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:20
msgid "bdist_dumb"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:21
msgid "bdist_rpm"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:22
msgid "bdist_wininst"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:23
msgid "upload"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:24
msgid "check"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:26
msgid "These are all standard setup.py commands and can be found by running:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:32
msgid "By default, only the 'build' and 'install' phases are run, but if you need to run more phases, simply modify your ``phases`` list like so:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:39
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage:16
msgid "Each phase provides a function <phase> that runs:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:45
msgid "Each phase also has a <phase_args> function that can pass arguments to this call. All of these functions are empty except for the ``install_args`` function, which passes ``--prefix=/path/to/installation/directory``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage:49
msgid "If you need to run a phase which is not a standard setup.py command, you'll need to define a function for it like so:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.add_files_to_view:1
msgid "Given a map of package files to destination paths in the view, add the files to the view. By default this adds all files. Alternative implementations may skip some files, for example if other packages linked into the view already include the file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.bdist:1
msgid "Create a built (binary) distribution."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.bdist_args:1
msgid "Arguments to pass to bdist."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.bdist_dumb:1
msgid "Create a \"dumb\" built distribution."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.bdist_dumb_args:1
msgid "Arguments to pass to bdist_dumb."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.bdist_rpm:1
msgid "Create an RPM distribution."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.bdist_rpm_args:1
msgid "Arguments to pass to bdist_rpm."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.bdist_wininst:1
msgid "Create an executable installer for MS Windows."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.bdist_wininst_args:1
msgid "Arguments to pass to bdist_wininst."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build:1
msgid "Build everything needed to install."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_args:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage.build_args:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.build_args:1
msgid "Arguments to pass to build."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_clib:1
msgid "Build C/C++ libraries used by Python extensions."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_clib_args:1
msgid "Arguments to pass to build_clib."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_directory:1
msgid "The directory containing the ``setup.py`` file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_ext:1
msgid "Build C/C++ extensions (compile/link to build directory)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_ext_args:1
msgid "Arguments to pass to build_ext."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_py:1
msgid "\"Build\" pure Python modules (copy to build directory)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_py_args:1
msgid "Arguments to pass to build_py."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.build_scripts:1
msgid "\"Build\" scripts (copy and fixup #! line)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.check:1
msgid "Perform some checks on the package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.check_args:1
msgid "Arguments to pass to check."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.clean:1
msgid "Clean up temporary files from 'build' command."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.clean_args:1
msgid "Arguments to pass to clean."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.import_module_test:1
msgid "Attempts to import the module that was just installed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.import_module_test:3
msgid "This test is only run if the package overrides :py:attr:`import_modules` with a list of module names."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install:1
msgid "Install everything from build directory."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_args:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage.install_args:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.install_args:1
msgid "Arguments to pass to install."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_data:1
msgid "Install data files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_data_args:1
msgid "Arguments to pass to install_data."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_headers:1
msgid "Install C/C++ header files."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_headers_args:1
msgid "Arguments to pass to install_headers."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_lib:1
msgid "Install all Python modules (extensions and pure Python)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_lib_args:1
msgid "Arguments to pass to install_lib."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_scripts:1
msgid "Install scripts (Python or otherwise)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.install_scripts_args:1
msgid "Arguments to pass to install_scripts."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.register:1
msgid "Register the distribution with the Python package index."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.register_args:1
msgid "Arguments to pass to register."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.remove_files_from_view:1
msgid "Given a map of package files to files currently linked in the view, remove the files from the view. The default implementation removes all files. Alternative implementations may not remove all files. For example if two packages include the same file, it should only be removed when both packages are removed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.sdist:1
msgid "Create a source distribution (tarball, zip file, etc.)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.sdist_args:1
msgid "Arguments to pass to sdist."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.setup_file:1
msgid "Returns the name of the setup file to use."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.test:1
msgid "Run unit tests after in-place build."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.test:3
msgid "These tests are only run if the package actually has a 'test' command."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.test_args:1
msgid "Arguments to pass to test."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.upload:1
msgid "Upload binary package to PyPI."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.upload_args:1
msgid "Arguments to pass to upload."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/python.py:docstring of spack.build_systems.python.PythonPackage.view_file_conflicts:1
msgid "Report all file conflicts, excepting special cases for python. Specifically, this does not report errors for duplicate __init__.py files for packages in the same namespace."
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:88
msgid "spack.build\\_systems.qmake module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage:1
msgid "Specialized class for packages built using qmake."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage:3
msgid "For more information on the qmake build system, see: http://doc.qt.io/qt-5/qmake-manual.html"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage:8
msgid ":py:meth:`~.QMakePackage.qmake`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage:9
msgid ":py:meth:`~.QMakePackage.build`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage:10
msgid ":py:meth:`~.QMakePackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage:12
msgid "They all have sensible defaults and for many packages the only thing necessary will be to override :py:meth:`~.QMakePackage.qmake_args`."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage.check:1
msgid "Searches the Makefile for a ``check:`` target and runs it if found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage.phases:1
msgid "Phases of a qmake package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage.qmake:1
msgid "Run ``qmake`` to configure the project and generate a Makefile."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/qmake.py:docstring of spack.build_systems.qmake.QMakePackage.qmake_args:1
msgid "Produces a list containing all the arguments that must be passed to qmake"
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:96
msgid "spack.build\\_systems.r module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage:1
msgid "Specialized class for packages that are built using R."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage:3
msgid "For more information on the R build system, see: https://stat.ethz.ch/R-manual/R-devel/library/utils/html/INSTALL.html"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage:6
msgid "This class provides a single phase that can be overridden:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage:8
msgid ":py:meth:`~.RPackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage:10
msgid "It has sensible defaults, and for many packages the only thing necessary will be to add dependencies"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage.configure_args:1
msgid "Arguments to pass to install via ``--configure-args``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage.configure_vars:1
msgid "Arguments to pass to install via ``--configure-vars``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/r.py:docstring of spack.build_systems.r.RPackage.install:1
msgid "Installs an R package."
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:104
msgid "spack.build\\_systems.scons module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage:1
msgid "Specialized class for packages built using SCons."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage:3
msgid "See http://scons.org/documentation.html for more information."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage:7
msgid ":py:meth:`~.SConsPackage.build`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage:8
msgid ":py:meth:`~.SConsPackage.install`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage:10
msgid "Packages that use SCons as a build system are less uniform than packages that use other build systems. Developers can add custom subcommands or variables that control the build. You will likely need to override :py:meth:`~.SConsPackage.build_args` to pass the appropriate variables."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage.build:1
msgid "Build the package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage.build_system_class:1
msgid "To be used in UI queries that require to know which build-system class we are using"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage.install:1
msgid "Install the package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage.phases:1
msgid "Phases of a SCons package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage.test:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.test:1
msgid "Run unit tests after build."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/scons.py:docstring of spack.build_systems.scons.SConsPackage.test:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.installtest:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.test:3
msgid "By default, does nothing. Override this if you want to add package-specific tests."
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:112
msgid "spack.build\\_systems.waf module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage:1
msgid "Specialized class for packages that are built using the Waf build system. See https://waf.io/book/ for more information."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage:6
msgid "configure"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage:10
msgid "These are all standard Waf commands and can be found by running:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage:22
msgid "where <jobs> is the number of parallel jobs to build with. Each phase also has a <phase_args> function that can pass arguments to this call. All of these functions are empty except for the ``configure_args`` function, which passes ``--prefix=/path/to/installation/prefix``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.build:1
msgid "Executes the build."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.build_directory:1
msgid "The directory containing the ``waf`` file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.configure:1
msgid "Configures the project."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.configure_args:1
msgid "Arguments to pass to configure."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.install:1
msgid "Installs the targets on the system."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.installtest:1
msgid "Run unit tests after install."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.python:1
msgid "The python ``Executable``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/build_systems/waf.py:docstring of spack.build_systems.waf.WafPackage.waf:1
msgid "Runs the waf ``Executable``."
msgstr ""

#: ../spack/lib/spack/docs/spack.build_systems.rst:121
msgid "Module contents"
msgstr ""

