# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-17 09:38+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/spack.util.rst:2
msgid "spack.util package"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:5
msgid "Subpackages"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:12
msgid "Submodules"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:15
msgid "spack.util.compression module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/compression.py:docstring of spack.util.compression.decompressor_for:1
msgid "Get the appropriate decompressor for a path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/compression.py:docstring of spack.util.compression.extension:1
msgid "Get the archive extension for a path."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/compression.py:docstring of spack.util.compression.strip_extension:1
msgid "Get the part of a path that does not include its compressed type extension."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:23
msgid "spack.util.crypto module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.Checker:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.DeprecatedHash:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.NameModifier:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.NameValueModifier:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/gpg.py:docstring of spack.util.gpg.Gpg:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.NamespaceTrie:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.NamespaceTrie.Element:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.Bunch:1
msgid "Bases: :class:`object`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.Checker:1
msgid "A checker checks files against one particular hex digest. It will automatically determine what hashing algorithm to used based on the length of the digest it's initialized with.  e.g., if the digest is 32 hex characters long this will use md5."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.Checker:7
msgid "Example: know your tarball should hash to 'abc123'.  You want to check files against this.  You would use this class like so::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.Checker:14
msgid "After the call to check, the actual checksum is available in checker.sum, in case it's needed for error output."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.Checker:17
msgid "You can trade read performance and memory usage by adjusting the block_size optional arg.  By default it's a 1MB (2**20 bytes) buffer."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.Checker.check:1
msgid "Read the file with the specified name and check its checksum against self.hexdigest.  Return True if they match, False otherwise.  Actual checksum is stored in self.sum."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.Checker.hash_name:1
msgid "Get the name of the hash function this Checker is using."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.bit_length:1
msgid "Number of bits required to represent an integer in binary."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.checksum:1
msgid "Returns a hex digest of the filename generated using an algorithm from hashlib."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.hash_algo_for_digest:1
msgid "Gets name of the hash algorithm for a hex digest."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.hash_fun_for_algo:1
msgid "Get a function that can perform the specified hash algorithm."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.hash_fun_for_digest:1
msgid "Gets a hash function corresponding to a hex digest."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.hashes:1
msgid "Set of hash algorithms that Spack can use, mapped to digest size in bytes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/crypto.py:docstring of spack.util.crypto.prefix_bits:1
msgid "Return the first <bits> bits of a byte array as an integer."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:31
msgid "spack.util.debug module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/debug.py:docstring of spack.util.debug:1
msgid "Debug signal handler: prints a stack trace and enters interpreter."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/debug.py:docstring of spack.util.debug:3
msgid "``register_interrupt_handler()`` enables a ctrl-C handler that prints a stack trace and drops the user into an interpreter."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/debug.py:docstring of spack.util.debug.debug_handler:1
msgid "Interrupt running process, and provide a python prompt for interactive debugging."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/debug.py:docstring of spack.util.debug.register_interrupt_handler:1
msgid "Print traceback and enter an interpreter on Ctrl-C"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:39
msgid "spack.util.editor module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor:1
msgid "Module for finding the user's preferred text editor."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor:3
msgid "Defines one function, editor(), which invokes the editor defined by the user's VISUAL environment variable if set. We fall back to the editor defined by the EDITOR environment variable if VISUAL is not set or the specified editor fails (e.g. no DISPLAY for a graphical editor). If neither variable is set, we fall back to one of several common editors, raising an EnvironmentError if we are unable to find one."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:1
msgid "Invoke the user's editor."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:3
msgid "This will try to execute the following, in order:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:5
msgid "$VISUAL <args>    # the \"visual\" editor (per POSIX)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:6
msgid "$EDITOR <args>    # the regular editor (per POSIX)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:7
msgid "some default editor (see ``_default_editors``) with <args>"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:9
msgid "If an environment variable isn't defined, it is skipped.  If it points to something that can't be executed, we'll print a warning. And if we can't find anything that can be executed after searching the full list above, we'll raise an error."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.append_flags:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.append_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.deprioritize_system_paths:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.prepend_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.prune_duplicate_paths:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.remove_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.set:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.set_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.unset:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.concatenate_paths:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.filter_environment_blacklist:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.inspect_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.is_system_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.preserve_environment:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.validate:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.add_default_env:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.make_log_context:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.simplify_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.composite:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix.join:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/string.py:docstring of spack.util.string.plural:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.find_versions_of_archive:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:0
msgid "Parameters"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:14
msgid "args to pass to editor"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:17
msgid "Optional Arguments:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/editor.py:docstring of spack.util.editor.editor:18
msgid "_exec_func (function): invoke this function instead of ``os.execv()``"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:47
msgid "spack.util.environment module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment:1
msgid "Utilities for setting and modifying environment variables."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.AppendFlagsEnv:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.AppendPath:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.PrependPath:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.RemovePath:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.SetEnv:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.SetPath:1
msgid "Bases: :class:`spack.util.environment.NameValueModifier`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.DeprioritizeSystemPaths:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.PruneDuplicatePaths:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.UnsetEnv:1
msgid "Bases: :class:`spack.util.environment.NameModifier`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications:1
msgid "Keeps track of requests to modify the current environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications:3
msgid "Each call to a method to modify the environment stores the extra information on the caller in the request:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications:6
msgid "'filename' : filename of the module where the caller is defined"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications:7
msgid "'lineno': line number where the request occurred"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications:8
msgid "'context' : line of code that issued the request that failed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.append_flags:1
msgid "Stores in the current object a request to append to an env variable"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.append_flags:3
msgid "name of the environment variable to be appended to"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.append_flags:4
msgid "value to append to the environment variable"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.append_flags:6
msgid "Appends with spaces separating different additions to the variable"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.append_path:1
msgid "Stores a request to append a path to a path list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.append_path:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.prepend_path:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.remove_path:3
msgid "name of the path list in the environment"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.append_path:4
msgid "path to be appended"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.apply_modifications:1
msgid "Applies the modifications and clears the list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.clear:1
msgid "Clears the current list of modifications"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.deprioritize_system_paths:1
msgid "Stores a request to deprioritize system paths in a path list, otherwise preserving the order."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.deprioritize_system_paths:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.prune_duplicate_paths:4
msgid "name of the path list in the environment."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:1
msgid "Returns modifications that would be made by sourcing a file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:3
msgid "The file to source"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:5
msgid "Arguments to pass on the command line"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.find_versions_of_archive:0
msgid "Keyword Arguments"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:8
msgid "The shell to use (default: ``bash``)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:10
msgid "Options passed to the shell (default: ``-c``)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:12
msgid "The command to run (default: ``source``)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:14
msgid "Redirect used to suppress output of command (default: ``&> /dev/null``)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:17
msgid "Operator used to execute a command only when the previous command succeeds (default: ``&&``)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:20
msgid "Ignore any modifications of these variables (default: [])"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:23
msgid "Always respect modifications of these variables (default: []). Has precedence over blacklist."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:26
msgid "In addition to removing empty entries, also remove duplicate entries (default: False)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.group_by_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.concatenate_paths:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.filter_environment_blacklist:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.inspect_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.is_system_path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.command:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.make_log_context:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.simplify_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.composite:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix.join:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/string.py:docstring of spack.util.string.plural:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:0
msgid "Returns"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:30
msgid "an object that, if executed, has     the same effect on the environment as sourcing the file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:32
msgid "an object that, if executed, has"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:33
msgid "the same effect on the environment as sourcing the file"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.from_sourcing_file:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.command:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.path:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.make_log_context:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.simplify_name:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix.join:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/string.py:docstring of spack.util.string.plural:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:0
msgid "Return type"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.group_by_name:1
msgid "Returns a dict of the modifications grouped by variable name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.group_by_name:3
msgid "dict mapping the environment variable name to the modifications to be done on it"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.prepend_path:1
msgid "Same as `append_path`, but the path is pre-pended."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.prepend_path:4
msgid "path to be pre-pended"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.prune_duplicate_paths:1
msgid "Stores a request to remove duplicates from a path list, otherwise preserving the order."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.remove_path:1
msgid "Stores a request to remove a path from a path list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.remove_path:4
msgid "path to be removed"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.set:1
msgid "Stores a request to set an environment variable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.set:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.unset:3
msgid "name of the environment variable to be set"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.set:4
msgid "value of the environment variable"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.set_path:1
msgid "Stores a request to set a path generated from a list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.set_path:3
msgid "name o the environment variable to be set."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.set_path:4
msgid "elements of the path to set."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.shell_modifications:1
msgid "Return shell code to apply the modifications and clears the list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.EnvironmentModifications.unset:1
msgid "Stores a request to unset an environment variable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.concatenate_paths:1
msgid "Concatenates an iterable of paths into a string of paths separated by separator, defaulting to colon."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.concatenate_paths:4
msgid "iterable of paths"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.concatenate_paths:5
msgid "the separator to use, default ':'"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.concatenate_paths:7
msgid "string"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.deprioritize_system_paths:1
msgid "Put system paths at the end of paths, otherwise preserving order."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.dump_environment:1
msgid "Dump an environment dictionary to a source-able file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.filter_environment_blacklist:1
msgid "Generator that filters out any change to environment variables present in the input list."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.filter_environment_blacklist:4
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.validate:7
msgid "list of environment modifications"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.filter_environment_blacklist:5
msgid "list of variable names to be filtered"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.filter_environment_blacklist:7
msgid "items in env if they are not in variables"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.filter_system_paths:1
msgid "Return only paths that are not system paths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.inspect_path:1
msgid "Inspects ``root`` to search for the subdirectories in ``inspections``. Adds every path found to a list of prepend-path commands and returns it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.inspect_path:4
msgid "absolute path where to search for subdirectories"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.inspect_path:6
msgid "maps relative paths to a list of environment variables that will be modified if the path exists. The modifications are not performed immediately, but stored in a command object that is returned to client"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.inspect_path:11
msgid "optional callable. If present it must accept an absolute path and return True if it should be excluded from the inspection"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.inspect_path:16
msgid "Examples:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.inspect_path:18
msgid "The following lines execute an inspection in ``/usr`` to search for ``/usr/include`` and ``/usr/lib64``. If found we want to prepend ``/usr/include`` to ``CPATH`` and ``/usr/lib64`` to ``MY_LIB64_PATH``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.inspect_path:36
msgid "instance of EnvironmentModifications containing the requested modifications"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.is_system_path:1
msgid "Predicate that given a path returns True if it is a system path, False otherwise."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.is_system_path:4
msgid "path to a directory"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.is_system_path:7
msgid "True or False"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.path_put_first:1
msgid "Puts the provided directories first in the path, adding them if they're not already there."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.pickle_environment:1
msgid "Pickle an environment dictionary to a file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.preserve_environment:1
msgid "Ensures that the value of the environment variables passed as arguments is the same before entering to the context manager and after exiting it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.preserve_environment:5
msgid "Variables that are unset before entering the context manager will be explicitly unset on exit."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.preserve_environment:8
msgid "list of environment variables to be preserved"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.prune_duplicate_paths:1
msgid "Returns the paths with duplicates removed, order preserved."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.set_env:1
msgid "Temporarily sets and restores environment variables."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.set_env:3
msgid "Variables can be set as keyword arguments to this function."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.set_or_unset_not_first:1
msgid "Check if we are going to set or unset something after other modifications have already been requested."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.validate:1
msgid "Validates the environment modifications to check for the presence of suspicious patterns. Prompts a warning for everything that was found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/environment.py:docstring of spack.util.environment.validate:4
msgid "Current checks: - set or unset variables after other changes on the same variable"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:55
msgid "spack.util.executable module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable:1
msgid "Class representing a program that can be run on the command line."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.add_default_arg:1
msgid "Add a default argument to the command."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.add_default_env:1
msgid "Set an environment variable when the command is run."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.add_default_env:3
msgid "The environment variable to set"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.add_default_env:4
msgid "The value to set it to"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.command:1
msgid "The command-line string."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.command:3
msgid "The executable and default arguments"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.name:1
msgid "The executable name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.name:3
msgid "The basename of the executable"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.path:1
msgid "The path to the executable."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.Executable.path:3
msgid "The path to the executable"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:1
msgid "Finds an executable in the path like command-line which."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:3
msgid "If given multiple executables, returns the first one that is found. If no executables are found, returns None."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:6
msgid "One or more executables to search for"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:9
msgid "The path to search. Defaults to ``PATH``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:11
msgid "If set to True, raise an error if executable not found"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.which:14
msgid "The first executable that is found in the path"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.ProcessError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.CacheError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.PackageHashError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_json.py:docstring of spack.util.spack_json.SpackJSONError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_yaml.py:docstring of spack.util.spack_yaml.SpackYAMLError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.SpackWebError:1
msgid "Bases: :class:`spack.error.SpackError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/executable.py:docstring of spack.util.executable.ProcessError:1
msgid "ProcessErrors are raised when Executables exit with an error code."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:63
msgid "spack.util.file\\_cache module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache:1
msgid "This class manages cached data in the filesystem."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache:3
msgid "Cache files are fetched and stored by unique keys.  Keys can be relative paths, so that there can be some hierarchy in the cache."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache:6
msgid "The FileCache handles locking cache files for reading and writing, so client code need not manage locks for cache entries."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.cache_path:1
msgid "Path to the file in the cache for a particular key."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.destroy:1
msgid "Remove all files under the cache root."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.init_entry:1
msgid "Ensure we can access a cache file. Create a lock for it if needed."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.init_entry:3
msgid "Return whether the cache file exists yet or not."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.mtime:1
msgid "Return modification time of cache file, or 0 if it does not exist."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.mtime:3
msgid "Time is in units returned by os.stat in the mtime field, which is platform-dependent."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.read_transaction:1
msgid "Get a read transaction on a file cache item."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.read_transaction:3
msgid "Returns a ReadTransaction context manager and opens the cache file for reading.  You can use it like this:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.read_transaction:6
msgid "with file_cache_object.read_transaction(key) as cache_file:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.read_transaction:7
msgid "cache_file.read()"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.write_transaction:1
msgid "Get a write transaction on a file cache item."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/file_cache.py:docstring of spack.util.file_cache.FileCache.write_transaction:3
msgid "Returns a WriteTransaction context manager that opens a temporary file for writing.  Once the context manager finishes, if nothing went wrong, moves the file into place on top of the old file atomically."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:71
msgid "spack.util.gpg module"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:79
msgid "spack.util.lock module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/lock.py:docstring of spack.util.lock:1
msgid "Wrapper for ``llnl.util.lock`` allows locking to be enabled/disabled."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/lock.py:docstring of spack.util.lock.Lock:1
msgid "Bases: :class:`llnl.util.lock.Lock`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/lock.py:docstring of spack.util.lock.Lock:1
msgid "Lock that can be disabled."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/lock.py:docstring of spack.util.lock.Lock:3
msgid "This overrides the ``_lock()`` and ``_unlock()`` methods from ``llnl.util.lock`` so that all the lock API calls will succeed, but the actual locking mechanism can be disabled via ``_enable_locks``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/lock.py:docstring of spack.util.lock.check_lock_safety:1
msgid "Do some extra checks to ensure disabling locks is safe."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/lock.py:docstring of spack.util.lock.check_lock_safety:3
msgid "This will raise an error if ``path`` can is group- or world-writable AND the current user can write to the directory (i.e., if this user AND others could write to the path)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/lock.py:docstring of spack.util.lock.check_lock_safety:7
msgid "This is intended to run on the Spack prefix, but can be run on any path for testing."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:87
msgid "spack.util.log\\_parse module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:1
msgid "Extract interesting events from a log file as a list of LogEvent."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:3
msgid "build log name or file object"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:5
msgid "lines of context to extract around each log event"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:7
msgid "number of jobs to parse with; default ncpus"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:9
msgid "print out profile information for parsing"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:12
msgid "two lists containig ``BuildError`` and     ``BuildWarning`` objects."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:14
msgid "two lists containig ``BuildError`` and"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:15
msgid "``BuildWarning`` objects."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.parse_log_events:18
msgid "This is a wrapper around ``ctest_log_parser.CTestLogParser`` that lazily constructs a single ``CTestLogParser`` object.  This ensures that all the regex compilation is only done once."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.make_log_context:1
msgid "Get error context from a log file."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.make_log_context:3
msgid "list of events created by ``ctest_log_parser.parse()``"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.make_log_context:6
msgid "wrap width; ``0`` for no limit; ``None`` to auto-size for terminal"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.make_log_context:10
msgid "context from the build log with errors highlighted"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.make_log_context:13
msgid "Parses the log file for lines containing errors, and prints them out with line numbers and context.  Errors are highlighted with '>>' and with red highlighting (if color is enabled)."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/log_parse.py:docstring of spack.util.log_parse.make_log_context:17
msgid "Events are sorted by line number before they are displayed."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:95
msgid "spack.util.module\\_cmd module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/module_cmd.py:docstring of spack.util.module_cmd:1
msgid "This module contains routines related to the module command for accessing and parsing environment modules."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/module_cmd.py:docstring of spack.util.module_cmd.get_path_from_module:1
msgid "Inspects a TCL module for entries that indicate the absolute path at which the library supported by said module can be found."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/module_cmd.py:docstring of spack.util.module_cmd.load_module:1
msgid "Takes a module name and removes modules until it is possible to load that module. It then loads the provided module. Depends on the modulecmd implementation of modules used in cray and lmod."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:103
msgid "spack.util.naming module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.mod_to_class:1
msgid "Convert a name from module style to class name style.  Spack mostly follows `PEP-8 <http://legacy.python.org/dev/peps/pep-0008/>`_:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.mod_to_class:4
msgid "Module and package names use lowercase_with_underscores."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.mod_to_class:5
msgid "Class names use the CapWords convention."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.mod_to_class:7
msgid "Regular source code follows these convetions.  Spack is a bit more liberal with its Package names and Compiler names:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.mod_to_class:10
msgid "They can contain '-' as well as '_', but cannot start with '-'."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.mod_to_class:11
msgid "They can start with numbers, e.g. \"3proxy\"."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.mod_to_class:13
msgid "This function converts from the module convention to the class convention by removing _ and - and converting surrounding lowercase text to CapWords.  If mod_name starts with a number, the class name returned will be prepended with '_' to make a valid Python identifier."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.spack_module_to_python_module:1
msgid "Given a Spack module name, returns the name by which it can be imported in Python."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.valid_module_name:1
msgid "Return whether mod_name is valid for use in Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.valid_fully_qualified_module_name:1
msgid "Return whether mod_name is a valid namespaced module name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.validate_fully_qualified_module_name:1
msgid "Raise an exception if mod_name is not a valid namespaced module name."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.validate_module_name:1
msgid "Raise an exception if mod_name is not valid."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.possible_spack_module_names:1
msgid "Given a Python module name, return a list of all possible spack module names that could correspond to it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.simplify_name:1
msgid "Simplify package name to only lowercase, digits, and dashes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.simplify_name:3
msgid "Simplifies a name which may include uppercase letters, periods, underscores, and pluses. In general, we want our package names to only contain lowercase letters, digits, and dashes."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.simplify_name:7
msgid "The original name of the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.simplify_name:10
msgid "The new name of the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.NamespaceTrie.has_value:1
msgid "True if there is a value set for the given namespace."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.NamespaceTrie.is_leaf:1
msgid "True if this namespace has no children in the trie."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/naming.py:docstring of spack.util.naming.NamespaceTrie.is_prefix:1
msgid "True if the namespace has a value, or if it's the prefix of one that does."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:111
msgid "spack.util.package\\_hash module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.PackageHashError:1
msgid "Raised for all errors encountered during package hashing."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.RemoveDirectives:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.RemoveDocstrings:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.ResolveMultiMethods:1
msgid "Bases: :class:`ast.NodeTransformer`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.RemoveDirectives:1
msgid "Remove Spack directives from a package AST."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.RemoveDocstrings:1
msgid "Transformer that removes docstrings from a Python AST."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.ResolveMultiMethods:1
msgid "Remove methods which do not exist if their @when is not satisfied."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.TagMultiMethods:1
msgid "Bases: :class:`ast.NodeVisitor`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/package_hash.py:docstring of spack.util.package_hash.TagMultiMethods:1
msgid "Tag @when-decorated methods in a spec."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:119
msgid "spack.util.path module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/path.py:docstring of spack.util.path:1
msgid "Utilities for managing paths in Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/path.py:docstring of spack.util.path:3
msgid "TODO: this is really part of spack.config. Consolidate it."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/path.py:docstring of spack.util.path.substitute_config_variables:1
msgid "Substitute placeholders into paths."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/path.py:docstring of spack.util.path.substitute_config_variables:3
msgid "Spack allows paths in configs to have some placeholders, as follows:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/path.py:docstring of spack.util.path.substitute_config_variables:5
msgid "$spack     The Spack instance's prefix"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/path.py:docstring of spack.util.path.substitute_config_variables:6
msgid "$user      The current user's username"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/path.py:docstring of spack.util.path.substitute_config_variables:7
msgid "$tempdir   Default temporary directory returned by tempfile.gettempdir()"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/path.py:docstring of spack.util.path.substitute_config_variables:9
msgid "These are substituted case-insensitively into the path, and users can use either ``$var`` or ``${var}`` syntax for the variables."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/path.py:docstring of spack.util.path.canonicalize_path:1
msgid "Substitute config vars, expand environment vars, expand user home, take abspath."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:127
msgid "spack.util.pattern module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.Args:1
msgid "Bases: :class:`spack.util.pattern.Bunch`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.Args:1
msgid "Subclass of Bunch to write argparse args more naturally."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.Bunch:1
msgid "Carries a bunch of named attributes (from Alex Martelli bunch)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.composite:1
msgid "Decorator implementing the GoF composite pattern."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.composite:3
msgid "class exposing the interface to which the composite object must conform. Only non-private and non-special methods will be taken into account"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.composite:7
msgid "names of methods that should be part of the composite"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.composite:10
msgid "container for the composite object (default = list).  Must fulfill the MutableSequence contract. The composite class will expose the container API to manage object composition"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/pattern.py:docstring of spack.util.pattern.composite:16
msgid "a class decorator that patches a class adding all the methods it needs to be a composite for a given interface."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:135
msgid "spack.util.prefix module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix:1
msgid "This file contains utilities for managing the installation prefix of a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix:1
msgid "Bases: :class:`str`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix:1
msgid "This class represents an installation prefix, but provides useful attributes for referring to directories inside the prefix."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix:4
msgid "Attributes of this object are created on the fly when you request them, so any of the following is valid:"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix:19
msgid "Prefix objects behave identically to strings. In fact, they subclass ``str``. So operators like ``+`` are legal::"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix:24
msgid "This prints ``foobar /usr``. All of this is meant to make custom installs easy."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix.join:1
msgid "Concatenates a string to a prefix."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix.join:3
msgid "the string to append to the prefix"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/prefix.py:docstring of spack.util.prefix.Prefix.join:6
msgid "the newly created installation prefix"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:143
msgid "spack.util.spack\\_json module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_json.py:docstring of spack.util.spack_json:1
msgid "Simple wrapper around JSON to guarantee consistent use of load/dump."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_json.py:docstring of spack.util.spack_json.load:1
msgid "Spack JSON needs to be ordered to support specs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_json.py:docstring of spack.util.spack_json.dump:1
msgid "Dump JSON with a reasonable amount of indentation and separation."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_json.py:docstring of spack.util.spack_json.SpackJSONError:1
msgid "Raised when there are issues with JSON parsing."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:151
msgid "spack.util.spack\\_yaml module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_yaml.py:docstring of spack.util.spack_yaml:1
msgid "Enhanced YAML parsing for Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_yaml.py:docstring of spack.util.spack_yaml:3
msgid "``load()`` preserves YAML Marks on returned objects -- this allows us to access file and line information later."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_yaml.py:docstring of spack.util.spack_yaml:6
msgid "``Our load methods use ``OrderedDict`` class instead of YAML's default unorderd dict."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_yaml.py:docstring of spack.util.spack_yaml.load:1
msgid "Load but modify the loader instance so that it will add __line__ atrributes to the returned object."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/spack_yaml.py:docstring of spack.util.spack_yaml.SpackYAMLError:1
msgid "Raised when there are issues with YAML parsing."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:159
msgid "spack.util.string module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/string.py:docstring of spack.util.string.plural:1
msgid "Pluralize <singular> word by adding an s if n != 1."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/string.py:docstring of spack.util.string.plural:3
msgid "number of things there are"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/string.py:docstring of spack.util.string.plural:5
msgid "singular form of word"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/string.py:docstring of spack.util.string.plural:7
msgid "optional plural form, for when it's not just singular + 's'"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/string.py:docstring of spack.util.string.plural:10
msgid "whether to include n in the result string (default True)"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/string.py:docstring of spack.util.string.plural:13
msgid "\"1 thing\" if n == 1 or \"n things\" if n != 1"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:167
msgid "spack.util.web module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.HTMLParseError:1
msgid "Bases: :class:`Exception`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.LinkParser:1
msgid "Bases: :class:`html.parser.HTMLParser`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.LinkParser:1
msgid "This parser just takes an HTML page and strips out the hrefs on the links.  Good enough for a really simple spider."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.NoNetworkConnectionError:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.VersionFetchError:1
msgid "Bases: :class:`spack.util.web.SpackWebError`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.NoNetworkConnectionError:1
msgid "Raised when an operation can't get an internet connection."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.NonDaemonContext:1
msgid "Bases: :class:`multiprocessing.context.ForkContext`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.NonDaemonPool:1
msgid "Bases: :class:`multiprocessing.pool.Pool`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.NonDaemonPool:1
msgid "Pool that uses non-daemon processes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.NonDaemonProcess:1
msgid "Bases: :class:`multiprocessing.context.Process`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.NonDaemonProcess:1
msgid "Process tha allows sub-processes, so pools can have sub-pools."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.NonDaemonProcess.daemon:1
msgid "Return whether process is a daemon"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.SpackWebError:1
msgid "Superclass for Spack web spidering errors."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.VersionFetchError:1
msgid "Raised when we can't determine a URL to fetch a package."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.find_versions_of_archive:1
msgid "Scrape web pages for new versions of a tarball."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.find_versions_of_archive:3
msgid "URL or sequence of URLs for different versions of a package. Typically these are just the tarballs from the package file itself.  By default, this searches the parent directories of archives."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.find_versions_of_archive:8
msgid "URL for a listing of archives.  Spack wills scrape these pages for download links that look like the archive URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.find_versions_of_archive:10
msgid "Max depth to follow links on list_url pages. Default 0."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:1
msgid "Fetches and checksums archives from URLs."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:3
msgid "This function is called by both ``spack checksum`` and ``spack create``.  The ``first_stage_function`` argument allows the caller to inspect the first downloaded archive, e.g., to determine the build system."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:8
msgid "A dictionary of the form: version -> URL"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:10
msgid "The name of the package"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:12
msgid "function that takes a Stage and a URL; this is run on the stage of the first URL downloaded"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:15
msgid "whether to keep staging area when command completes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.get_checksums_for_versions:18
msgid "A multi-line string containing versions and corresponding hashes"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.spider:1
msgid "Gets web pages from a root URL."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.spider:3
msgid "If depth is specified (e.g., depth=2), then this will also follow up to <depth> levels of links from the root."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/web.py:docstring of spack.util.web.spider:6
msgid "This will spawn processes to fetch the children, for much improved performance over a sequential fetch."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.rst:176
msgid "Module contents"
msgstr ""

