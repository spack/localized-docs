# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2019, Lawrence Livermore National Laboratory.
# This file is distributed under the same license as the Spack package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Spack 0.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-17 09:38+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../spack/lib/spack/docs/spack.util.imp.rst:2
msgid "spack.util.imp package"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.imp.rst:5
msgid "Submodules"
msgstr ""

#: ../spack/lib/spack/docs/spack.util.imp.rst:8
msgid "spack.util.imp.imp\\_importer module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer:1
msgid "Implementation of Spack imports that uses imp underneath."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer:3
msgid "``imp`` is deprecated in newer versions of Python, but is the only option in Python 2.6."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.load_source:1
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.load_source:1
msgid "Import a Python module from source."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.load_source:3
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.load_source:3
msgid "Load the source file and add it to ``sys.modules``."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.load_source:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.load_source:0
msgid "Parameters"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.load_source:5
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.load_source:5
msgid "full name of the module to be loaded"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.load_source:7
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.load_source:7
msgid "path to the file that should be loaded"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.load_source:9
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.load_source:9
msgid "some optional code to prepend to the loaded module; e.g., can be used to inject import statements"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.load_source:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.load_source:0
msgid "Returns"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.load_source:13
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.load_source:13
msgid "the loaded module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.load_source:0
#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.load_source:0
msgid "Return type"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.prepend_open:1
msgid "Open a file for reading, but prepend with some text prepended"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.prepend_open:3
msgid "Arguments are same as for ``open()``, with one keyword argument, ``text``, specifying the text to prepend."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.prepend_open:6
msgid "We have to write and read a tempfile for the ``imp``-based importer, as the ``file`` argument to ``imp.load_source()`` requires a low-level file handle."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/imp_importer.py:docstring of spack.util.imp.imp_importer.prepend_open:10
msgid "See the ``importlib``-based importer for a faster way to do this in later versions of python."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.imp.rst:16
msgid "spack.util.imp.importlib\\_importer module"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer:1
msgid "Implementation of Spack imports that uses importlib underneath."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer:3
msgid "``importlib`` is only fully implemented in Python 3."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.PrependFileLoader:1
msgid "Bases: :class:`_frozen_importlib_external.SourceFileLoader`"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/importlib_importer.py:docstring of spack.util.imp.importlib_importer.PrependFileLoader.get_data:1
msgid "Return the data from path as raw bytes."
msgstr ""

#: ../spack/lib/spack/docs/spack.util.imp.rst:25
msgid "Module contents"
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/__init__.py:docstring of spack.util.imp:1
msgid "Consolidated module for all imports done by Spack."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/__init__.py:docstring of spack.util.imp:3
msgid "Many parts of Spack have to import Python code. This utility package wraps Spack's interface with Python's import system."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/__init__.py:docstring of spack.util.imp:6
msgid "We do this because Python's import system is confusing and changes from Python version to Python version, and we should be able to adapt our approach to the underlying implementation."
msgstr ""

#: ../spack/lib/spack/docs/_spack_root/lib/spack/spack/util/imp/__init__.py:docstring of spack.util.imp:10
msgid "Currently, this uses ``importlib.machinery`` where available and ``imp`` when ``importlib`` is not completely usable."
msgstr ""

